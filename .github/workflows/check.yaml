name: Check

on:
  push:
    branches: main
  pull_request:
    branches: main
  workflow_dispatch:
    inputs:
      force:
        description: Force publish
        type: boolean
        default: false
        required: false

run-name: Run checks (lint, test, typecheck)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changed-files:
    name: Detect changed files
    runs-on: ubuntu-latest
    outputs:
      any-changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/check.yaml
            .storybook/**
            .xo-config.json
            package.json
            pnpm-lock.yaml
            src/**
            test.setup.ts
            tsconfig.json
            vite.config.ts

  check:
    name: Check (${{ matrix.name }})
    runs-on: ubuntu-latest
    needs:
      - changed-files
    if: ${{ inputs.force || needs.changed-files.outputs.any-changed == 'true' }}
    strategy:
      matrix:
        include:
          - name: lint
            run: pnpm run lint
          - name: test
            run: pnpm run test
          - name: build
            run: pnpm run build
          - name: build-storybook
            run: pnpm run build-storybook
    steps:
      - uses: actions/checkout@v4
      - id: tool-versions
        run: |
          echo "node-version=$(./scripts/tool-versions.sh nodejs)" >> $GITHUB_OUTPUT
          echo "pnpm-version=$(./scripts/tool-versions.sh pnpm)" >> $GITHUB_OUTPUT
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.tool-versions.outputs.pnpm-version }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.tool-versions.outputs.node-version }}
          cache: pnpm
      - run: pnpm install --frozen-lockfile --strict-peer-dependencies
      - run: pnpm dlx playwright install --with-deps
      - run: ${{ matrix.run}}
