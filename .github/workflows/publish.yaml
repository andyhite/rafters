name: Publish

on:
  push:
    tags:
      - v*

run-name: Publish ${{ github.ref_name }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  id-token: write
  packages: write
  pages: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: tool-versions
        run: |
          echo "node-version=$(./scripts/tool-versions.sh nodejs)" >> $GITHUB_OUTPUT
          echo "pnpm-version=$(./scripts/tool-versions.sh pnpm)" >> $GITHUB_OUTPUT
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.tool-versions.outputs.pnpm-version }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.tool-versions.outputs.node-version }}
          cache: pnpm
      - run: pnpm install
      - run: pnpm build
      - run: pnpm pack --pack-gzip-level 9
      - uses: actions/upload-artifact@v4
        with:
          name: rafters.tgz
          path: rafters-*.tgz

  publish:
    name: Publish to ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      matrix:
        include:
          - name: GitHub
            registry-url: https://npm.pkg.github.com
            auth-token-key: GITHUB_TOKEN
          - name: NPM
            registry-url: https://registry.npmjs.org
            auth-token-key: NPM_ACCESS_TOKEN
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: rafters.tgz
      - id: tool-versions
        run: |
          echo "node-version=$(./scripts/tool-versions.sh nodejs)" >> $GITHUB_OUTPUT
          echo "pnpm-version=$(./scripts/tool-versions.sh pnpm)" >> $GITHUB_OUTPUT
      - uses: pnpm/action-setup@v4
        with:
          version: ${{ steps.tool-versions.outputs.pnpm-version }}
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.tool-versions.outputs.node-version }}
          registry-url: ${{ matrix.registry-url }}
          cache: pnpm
      - run: pnpm publish --access public --no-git-checks --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.auth-token-key] }}

  release:
      name: Release
      runs-on: ubuntu-latest
      needs:
        - build
        - publish
      steps:
        - uses: actions/download-artifact@v2
          with:
            name: rafters.tgz
        - run: |
            eval `ssh-agent -s`
            ssh-add - <<< '${{ secrets.DEPLOY_KEY_PRIVATE }}'
            echo '${{ vars.DEPLOY_KEY_PUBLIC }}' > '${{ runner.temp }}/DEPLOY_KEY_PUBLIC.pub'
            ssh-keygen -Y sign -f '${{ runner.temp }}/DEPLOY_KEY_PUBLIC.pub' -n file rafters-*.tgz
            ssh-keygen -Y verify -f ./.github/authorized_keys -I '41898282+github-actions[bot]@users.noreply.github.com' -n file -s rafters-*.tgz.sig < rafters-*.tgz
        - run: gh release upload ${{ github.ref_name }} rafters-*.tgz rafters-*.tgz.sig
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
